---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from "astro:content";

import BlogLayout from "@layouts/BlogLayout.astro";
import PageHeadings from "@components/vue/PageHeadings.vue";

interface Props {
  blog: CollectionEntry<"blogs">
}

export async function getStaticPaths() {
  const blogs = await getCollection("blogs", ({ data }) => {
    return data.draft === false
  })
  return blogs.map((blog: CollectionEntry<"blogs">) => ({
    params: {
      slug: blog.slug,
    },
    props: {
      blog: blog
    }
  }))
}

const { blog } = Astro.props
const { Content, headings } = await blog.render()
---

<BlogLayout title={blog.data.title} description={blog.data.description}>
  <div>
    <header>
      <h1>{blog.data.title}</h1>
      <div>
        Published on {blog.data.date.toDateString()}
      </div>
    </header>
    <div class="markdown-content">
      <Content />
    </div>
    <div>
      <a href="/">cd ..</a>
    </div>
  </div>
  <PageHeadings client:load headings={headings} />
</BlogLayout>

<script>
  const snippets = document.querySelectorAll(".markdown-content pre")

  const copy = async (e) => {
    const code = e.target.parentElement.querySelector("code")
    try {
      await navigator.clipboard.writeText(code.textContent)
      e.target.textContent = "Copied!"
      setTimeout(() => {
        e.target.textContent = "Copy"
      }, 1500)
    } catch (err) {
      console.error(err)
    }
  }

  snippets.forEach(snippet => {
    const button = document.createElement("button")
    button.textContent = "Copy"
    button.classList.add("copy-code")
    button.addEventListener("click", copy)
    snippet.appendChild(button)
  })
</script>