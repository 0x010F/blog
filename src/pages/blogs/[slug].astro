---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

import Layout from "@layouts/layout.astro";
import MarkdownContent from "@components/astro/markdown-content.astro";
import PageHeadings from "@components/vue/page-headings.vue";

interface Props {
  blog: CollectionEntry<"blogs">,
}

export async function getStaticPaths() {
  const blogs = await getCollection("blogs", ({ data }) => {
    return data.draft === false
  })
  return blogs.map(blog => ({
    params: {
      slug: blog.slug,
    },
    props: {
      blog: blog,
    }
  }))
}

const { blog } = Astro.props;
const { headings } = await blog.render()
---

<Layout
  title={blog.data.title}
  description={blog.data.description}
>
  <div class="flex items-start w-full my-4">
    <div class="w-full md:w-4/5 p-4">
      <MarkdownContent blog={blog} />
    </div>
    <div class="hidden md:block md:w-1/5 p-4 sticky top-2">
      <PageHeadings headings={headings} client:visible />
    </div>
  </div>
</Layout>

<script>
  // Copy code
  window.onload = function () {

    async function copy(e) {
      try {
        const snippet = e.target.parentElement.querySelector("code")
        e.target.textContent = "Copied!"
        await navigator.clipboard.writeText(snippet.textContent)
        setTimeout(() => {
          e.target.textContent = "Copy"
        }, 1500)
      } catch (err) {
        console.error(err)
      }
    }

    const snippets = document.querySelectorAll(".markdown-content pre")
    snippets.forEach(snippet => {
      const btn = document.createElement("button")
      btn.textContent = "Copy"
      btn.classList.add("copy-code")
      btn.addEventListener("click", copy)
      snippet.appendChild(btn)
    })
  }
</script>